import React, { useEffect, useState } from "react";
import { TextField, Box, IconButton, Tooltip, Button } from "@mui/material";
import CopyAllIcon from "@mui/icons-material/CopyAll";
import { useCreateSignUpApiMutation } from "@/redux/api/signup/signUpApiSlice";
import UserDetailsModal from "../Modals/UserDetailsModal";

interface Step3GenerateCredentialsProps {
  email: string;
  setCredentials: React.Dispatch<React.SetStateAction<{ email: string; password: string }[]>>;
}

const Step3GenerateCredentials: React.FC<Step3GenerateCredentialsProps> = ({
  email,
  setCredentials,
}) => {
  const [password, setPassword] = useState<string>(""); // State for password

  const generatePassword = () => {
    const chars =
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()";
    let generatedPassword = "";
    for (let i = 0; i < 12; i++) {
      generatedPassword += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    return generatedPassword;
  };

  useEffect(() => {
    const generateCredentials = () => {
      const pwd = generatePassword();
      setPassword(pwd); // Update the password state
      setCredentials([{ email, password: pwd }]); // Update credentials
    };
    generateCredentials();
  }, [email, setCredentials]);

  // Copy email and password to clipboard
  const handleCopy = () => {
    const copyText = `Email: ${email}\nPassword: ${password}`;
    navigator.clipboard.writeText(copyText).then(() => {
      alert("Credentials copied to clipboard!");
    });
  };

  // State for opening the modal
  const [open, setOpen] = useState(false);
  const [userId, setUserId] = useState<string | undefined>(undefined); // State to hold user ID

  // Add to system
  const [createSignUpApi] = useCreateSignUpApiMutation();

  const handleAddToSystem = async () => {
    try {
      const response = await createSignUpApi({ email, password }).unwrap();
      console.log("API Response:", response);

      // Set user ID and open the modal
      const userId = response?.user?.id; // Access the id from the nested user object
      setUserId(userId);
      setOpen(true);
    } catch (error: any) {
      console.log(error.message);
    }
  };

  return (
    <Box className="space-y-4 mt-4">
      <div>
        <label>Email</label>
        <TextField
          value={email}
          disabled
          fullWidth
          variant="outlined"
          className="mt-2"
        />
      </div>
      <div>
        <label>Autogenerated Password</label>
        <TextField
          value={password}
          disabled
          fullWidth
          variant="outlined"
          className="mt-2"
        />
      </div>
      <div className="flex justify-end mt-4 space-x-2">
        <Tooltip title="Copy Credentials">
          <IconButton onClick={handleCopy} color="primary">
            <CopyAllIcon />
          </IconButton>
        </Tooltip>

       
      </div>

      {/* Pass the userId to the modal */}
      <UserDetailsModal
        open={open}
        onClose={() => setOpen(false)}
        userId={userId} // Only passing the userId here
      />
    </Box>
  );
};

export default Step3GenerateCredentials;
